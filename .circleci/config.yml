version: 2.1
executors:
  go-builder:
    docker:
    - image: circleci/golang:1.12.4
  docker-publisher:
    environment:
      IMAGE_NAME: karm/serve-file
    docker:
    - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: go-builder
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "glide.yaml" }}
        - v1-dependencies-
    - run: curl https://glide.sh/get | sh
    - run: glide install
    - run: go get github.com/jstemmer/go-junit-report
    - save_cache:
        paths:
        - ${GOPATH}
        - ./vendor
        key: v1-dependencies-{{ checksum "glide.yaml" }}
    - run:
        name: Run unit tests
        command: |
          trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
          for t in `find -name "*.go" ! -path '*/vendor/*' | xargs grep "func Test" | sed 's/.*func \([a-zA-Z]*\).*/\1/g'`;do go test -timeout 180s -v -run $t 2>&1 | tee -a ${TEST_RESULTS}/go-test.out;killall openssl;done
  docker-build:
    executor: docker-publisher
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker
    - run:
        name: Build Docker image
        command: |
          docker build -t $IMAGE_NAME:master .
    - run:
        name: Archive built Docker image
        command: docker save -o image.tar $IMAGE_NAME
    - persist_to_workspace:
        root: .
        paths:
        - ./image.tar

  publish-master:
    executor: docker-publisher
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker
    - run:
        name: Load archived Docker image
        command: docker load -i /tmp/workspace/image.tar
    - run:
        name: Publish Docker Image to Docker Hub
        command: |
          echo "$DOCKERHUB_K_PASS" | docker login -u "$DOCKERHUB_K_USERNAME" --password-stdin
          docker push $IMAGE_NAME:master

workflows:
  build-master:
    jobs:
    - build:
        filters:
          branches:
            only: master
    - docker-build:
        requires:
        - build
        filters:
          branches:
            only: master
    - publish-master:
        requires:
        - docker-build
        filters:
          branches:
            only: master
